<local:SettingsWindowBase
	x:Class="DivinityModManager.Views.SettingsWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:adonisExtensions="clr-namespace:AdonisUI.Extensions;assembly=AdonisUI"
	xmlns:adonisUI="clr-namespace:AdonisUI;assembly=AdonisUI"
	xmlns:autogrid="clr-namespace:WpfAutoGrid;assembly=WpfAutoGrid"
	xmlns:behavior="clr-namespace:DivinityModManager.Controls.Behavior"
	xmlns:c="clr-namespace:DivinityModManager.Controls"
	xmlns:controls="clr-namespace:DivinityModManager.Controls"
	xmlns:conv="clr-namespace:DivinityModManager.Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dapp="clr-namespace:DivinityModManager;assembly=DivinityModManagerCore"
	xmlns:data="clr-namespace:DivinityModManager.Models;assembly=DivinityModManagerCore"
	xmlns:dd="urn:gong-wpf-dragdrop"
	xmlns:ext="clr-namespace:DivinityModManager.Controls.Extensions"
	xmlns:local="clr-namespace:DivinityModManager.Views"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:reactiveui="http://reactiveui.net"
	xmlns:vm="clr-namespace:DivinityModManager.ViewModels"
	xmlns:xc="http://schemas.xceed.com/wpf/xaml/toolkit"
	xmlns:loc="clr-namespace:DivinityModManager.Properties"
	Title="{x:Static loc:Resources.Preferences}"
	Width="800"
	Height="900"
	TitleBarBackground="#4e38c9"
	TitleBarForeground="{DynamicResource {x:Static adonisUI:Brushes.AccentForegroundBrush}}"
	mc:Ignorable="d">
	<Window.Style>
		<Style BasedOn="{StaticResource {x:Type Window}}" TargetType="Window" />
	</Window.Style>
	<Window.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="../Themes/MainResourceDictionary.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
				<Setter Property="Padding" Value="20,2" />
				<Setter Property="Margin" Value="2,0,2,0" />
			</Style>
			<Style TargetType="StackPanel">
				<Setter Property="VerticalAlignment" Value="Center" />
				<Setter Property="Orientation" Value="Horizontal" />
				<Setter Property="Margin" Value="10" />
			</Style>
			<Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>
			<Style BasedOn="{StaticResource {x:Type TextBox}}" TargetType="TextBox" />
			<Style BasedOn="{StaticResource {x:Type CheckBox}}" TargetType="CheckBox">
				<Setter Property="VerticalAlignment" Value="Center" />
			</Style>
		</ResourceDictionary>
	</Window.Resources>
	<Grid>
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>
		<StackPanel
			Margin="4"
			HorizontalAlignment="Left"
			Orientation="Horizontal">
			<Button
				Command="{Binding SaveSettingsCommand}"
				Style="{StaticResource IconButtonStyle}"
				ToolTip="{x:Static loc:Resources.SaveSettingsTooltip}">
				<controls:AutoGrayableImage Source="{StaticResource SaveImage}" />
			</Button>
			<Rectangle
				Grid.Column="1"
				Margin="2,0"
				Style="{StaticResource VerticalSeparator}" />
			<Button
				Command="{Binding OpenSettingsFolderCommand}"
				Style="{StaticResource IconButtonStyle}"
				ToolTip="{x:Static loc:Resources.OpenSettingsFolderTooltip}">
				<controls:AutoGrayableImage Source="{StaticResource OpenFolderImage}" />
			</Button>
			<Rectangle
				Grid.Column="1"
				Margin="2,0"
				Style="{StaticResource VerticalSeparator}" />
			<Button
				Command="{Binding ResetExtenderSettingsToDefaultCommand}"
				Style="{StaticResource IconButtonStyle}"
				ToolTip="{x:Static loc:Resources.ResetExtenderSettingsToDefaultTooltip}"
				Visibility="{Binding ExtenderTabIsVisible, Converter={StaticResource BoolToVisibilityConverter}}">
				<controls:AutoGrayableImage Source="{StaticResource DefaultIcon}" />
			</Button>
		</StackPanel>
		<TabControl
			x:Name="PreferencesTabControl"
			Grid.Row="1"
			SelectedIndex="{Binding SelectedTabIndex}">
			<TabItem FocusManager.FocusedElement="{Binding ElementName=SettingsAutoGrid}" Header="{x:Static loc:Resources.SettingsHeader}">
				<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
					<autogrid:AutoGrid
						x:Name="SettingsAutoGrid"
						Margin="10,0"
						ChildMargin="4"
						ColumnCount="2"
						Columns="auto,*"
						RowCount="13"
						RowHeight="*"
						Rows="auto,auto,auto,auto,auto,auto,auto,auto,auto,auto,auto,auto,auto">
						<autogrid:AutoGrid.Resources>
							<Style BasedOn="{StaticResource {x:Type TextBlock}}" TargetType="TextBlock">
								<Setter Property="DataContext" Value="{Binding}" />
							</Style>
						</autogrid:AutoGrid.Resources>
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="GameDataPath" />
						<controls:UnfocusableTextBox
							VerticalAlignment="Center"
							Text="{Binding GameDataPath, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
							TextAlignment="Left" />
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="GameExecutablePath" />
						<controls:UnfocusableTextBox
							VerticalAlignment="Center"
							Text="{Binding GameExecutablePath, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
							TextAlignment="Left" />
						<!--<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="WorkshopPath" />
						<controls:UnfocusableTextBox
							x:Name="WorkshopPathTextbox"
							VerticalAlignment="Center"
							GotFocus="WorkshopPathTextbox_GotFocus"
							LostFocus="WorkshopPathTextbox_LostFocus"
							Text="{Binding WorkshopPath, UpdateSourceTrigger=PropertyChanged, FallbackValue=''}"
							TextAlignment="Left" />-->
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="LoadOrderPath" />
						<controls:UnfocusableTextBox
							VerticalAlignment="Center"
							Text="{Binding LoadOrderPath, UpdateSourceTrigger=PropertyChanged, FallbackValue='Load Order'}"
							TextAlignment="Left" />
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="GameStoryLogEnabled" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding GameStoryLogEnabled, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="TelemetryDisabled" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding TelemetryDisabled, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="AutoAddDependenciesWhenExporting" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding AutoAddDependenciesWhenExporting, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="CheckForUpdates" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding CheckForUpdates, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="DisableMissingModWarnings" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding DisableMissingModWarnings, UpdateSourceTrigger=PropertyChanged}" />
						<!--<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="DisableWorkshopTagCheck" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding DisableWorkshopTagCheck, UpdateSourceTrigger=PropertyChanged}" />-->
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="ShiftListFocusOnSwap" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding ShiftListFocusOnSwap, UpdateSourceTrigger=PropertyChanged}" />
						<!--<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="AutomaticallyLoadDMCampaignMods" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding AutomaticallyLoadDMCampaignMods, UpdateSourceTrigger=PropertyChanged}" />-->
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="SaveWindowLocation" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding SaveWindowLocation, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock Text="{x:Static loc:Resources.OnGameLaunch}" />
						<ComboBox
							DisplayMemberPath="Description"
							ItemsSource="{Binding Source={ext:EnumExtension {x:Type dapp:DivinityGameLaunchWindowAction}}}"
							SelectedValue="{Binding ActionOnGameLaunch, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
							SelectedValuePath="Value"
							ToolTip="{x:Static loc:Resources.ActionOnGameLaunchTooltip}" />
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="LaunchDX11" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding LaunchDX11, UpdateSourceTrigger=PropertyChanged}" />
						<TextBlock behavior:TextBlockSettingsEntryAttributeBehavior.Target="SkipLauncher" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding SkipLauncher, UpdateSourceTrigger=PropertyChanged}" />
					</autogrid:AutoGrid>
				</ScrollViewer>
			</TabItem>
			<TabItem
				x:Name="KeybindingsTabItem"
				FocusManager.FocusedElement="{Binding ElementName=KeybindingsListView}"
				Header="{x:Static loc:Resources.KeybindingsTabHeader}">
				<ListView
					x:Name="KeybindingsListView"
					KeyboardNavigation.TabNavigation="Continue"
					MouseDoubleClick="HotkeyListViewItem_MouseDoubleClick"
					ScrollViewer.VerticalScrollBarVisibility="Auto">
					<ListView.ItemContainerStyle>
						<Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="ListViewItem">
							<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
							<Setter Property="Tag" Value="{Binding}" />
							<Setter Property="HorizontalContentAlignment" Value="Stretch" />
							<Setter Property="VerticalContentAlignment" Value="Stretch" />
							<Setter Property="ToolTip" Value="{Binding ToolTip}" />
							<Setter Property="ContextMenu">
								<Setter.Value>
									<ContextMenu>
										<MenuItem
											x:Name="ResetHotkeyMenuItem"
											Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext.ResetCommand}"
											Header="{x:Static loc:Resources.ResetHotkeyMenuItemHeader}" />
										<MenuItem
											x:Name="ClearHotkeyMenuItem"
											Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext.ClearCommand}"
											Header="{x:Static loc:Resources.ClearHotkeyMenuItemHeader}" />
									</ContextMenu>
								</Setter.Value>
							</Setter>
						</Style>
					</ListView.ItemContainerStyle>
					<ListView.View>
						<GridView AllowsColumnReorder="False" ColumnHeaderContainerStyle="{StaticResource GridViewLeftContainerStyle}">
							<GridView.Columns>
								<GridViewColumn
									Width="450"
									Header="{x:Static loc:Resources.Command}"
									HeaderTemplate="{StaticResource GridViewTextblockHeaderTemplate}">
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<TextBlock
												Margin="0,4"
												Padding="0"
												HorizontalAlignment="Stretch"
												VerticalAlignment="Bottom"
												IsHitTestVisible="False"
												TextAlignment="Left">
												<Run Foreground="Lime" Text="{Binding ModifiedText, Mode=OneWay}" />
												<Run Text="{Binding DisplayName, Mode=OneWay}" /></TextBlock>
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
								<GridViewColumn
									Width="200"
									Header="{x:Static loc:Resources.Keybinding}"
									HeaderTemplate="{StaticResource GridViewTextblockHeaderTemplate}">
									<GridViewColumn.CellTemplate>
										<DataTemplate>
											<controls:HotkeyEditorControl
												HorizontalAlignment="Left"
												FocusReturnTarget="{Binding ElementName=KeybindingsListView}"
												GotFocus="HotkeyEditorControl_GotFocus"
												Hotkey="{Binding}"
												LostFocus="HotkeyEditorControl_LostFocus" />
										</DataTemplate>
									</GridViewColumn.CellTemplate>
								</GridViewColumn>
							</GridView.Columns>
						</GridView>
					</ListView.View>
				</ListView>
			</TabItem>
			<TabItem FocusManager.FocusedElement="{Binding ElementName=AdvancedSettingsAutoGrid}" Header="{x:Static loc:Resources.AdvancedSettingsHeader}">
				<ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto">
					<autogrid:AutoGrid
						x:Name="AdvancedSettingsAutoGrid"
						Margin="10,0"
						ChildMargin="2"
						ColumnCount="2"
						Columns="auto,*"
						RowCount="4"
						RowHeight="*"
						Rows="auto,auto,auto,auto">
						<TextBlock
							x:Name="DebugModeTextBlock"
							behavior:TextBlockSettingsEntryAttributeBehavior.Target="DebugModeEnabled"
							DataContext="{Binding}" />
						<CheckBox
							VerticalAlignment="Center"
							IsChecked="{Binding DebugModeEnabled, UpdateSourceTrigger=PropertyChanged}"
							ToolTip="{Binding ElementName=DebugModeTextBlock, Path=ToolTip}" />
						<TextBlock Text="{x:Static loc:Resources.LogEnabledCheckbox}" ToolTip="{x:Static loc:Resources.LogEnabledCheckboxTooltip}" />
						<CheckBox VerticalAlignment="Center" IsChecked="{Binding LogEnabled, UpdateSourceTrigger=PropertyChanged}" />
						<Menu>
							<Menu.Resources>
								<Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="MenuItem">
									<Setter Property="Command" Value="{Binding AddLaunchParamCommand}" />
									<Setter Property="CommandParameter" Value="{Binding Path=Header, RelativeSource={RelativeSource Self}}" />
								</Style>
							</Menu.Resources>
							<MenuItem
								Command="{x:Null}"
								CommandParameter="{x:Null}"
								Header="{x:Static loc:Resources.GameLaunchParams}"
								ToolTip="{x:Static loc:Resources.GameLaunchParamsTooltip}">
								<MenuItem Header="-continueGame" ToolTip="{x:Static loc:Resources.GameLaunchParamsContinueGame}" />
								<MenuItem Header="-storylog 1" ToolTip="{x:Static loc:Resources.GameLaunchParamsStoryLog}" />
								<MenuItem Header="--logPath &quot;&quot;" ToolTip="{x:Static loc:Resources.GameLaunchParamsLogPath}" />
								<MenuItem Header="--cpuLimit x" ToolTip="{x:Static loc:Resources.GameLaunchParamsCpuLimit}" />
								<MenuItem Header="-asserts 1" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="-stats 1" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="-dynamicStory 1" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="-externalcrashhandler" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="-nametag &quot;&quot;" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="--cpuLimit &quot;&quot;" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="-module &quot;&quot;" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="+connect_lobby &quot;&quot;" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="-locaupdater 1" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem Header="-mediaPath &quot;&quot;" Visibility="{Binding DebugModeEnabled, Converter={StaticResource BoolToVisibilityConverter}}" />
								<MenuItem
									Command="{Binding ClearLaunchParamsCommand}"
									CommandParameter="{x:Null}"
									Header="{x:Static loc:Resources.GameLaunchParamsClearHeader}"
									ToolTip="{x:Static loc:Resources.GameLaunchParamsClearTooltip}" />
							</MenuItem>
						</Menu>
						<TextBox
							VerticalAlignment="Center"
							Text="{Binding GameLaunchParams, UpdateSourceTrigger=PropertyChanged}"
							TextWrapping="Wrap"
							ToolTip="{x:Static loc:Resources.GameLaunchParamsTooltip}" />
						<TextBlock
							x:Name="ClearCacheTextBlock"
							Text="{x:Static loc:Resources.ClearCacheText}"
							ToolTip="{x:Static loc:Resources.ClearCacheTextTooltip}" />
						<Button
							HorizontalAlignment="Left"
							VerticalAlignment="Center"
							Command="{Binding ClearWorkshopCacheCommand}"
							Content="{x:Static loc:Resources.ClearWorkshopCache}"
							ToolTip="{Binding ElementName=ClearCacheTextBlock, Path=ToolTip}" />
					</autogrid:AutoGrid>
				</ScrollViewer>
			</TabItem>
		</TabControl>
		<Grid Grid.Row="2" Margin="0,8">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Grid Margin="4,0,4,0" Background="{DynamicResource {x:Static adonisUI:Brushes.Layer0BackgroundBrush}}">
				<Button
					x:Name="ResetKeybindingsButton"
					HorizontalAlignment="Center"
					Command="{Binding ResetKeybindingsCommand}"
					Content="{x:Static loc:Resources.ResetKeybindings}"
					ToolTip="{x:Static loc:Resources.ResetKeybindingsTooltip}"
					Visibility="{Binding KeybindingsTabIsVisible, Converter={StaticResource BoolToVisibilityConverter}, FallbackValue=Collapsed}" />
			</Grid>
			<Grid Grid.Column="1">
				<Button
					x:Name="SaveSettingsButton"
					Padding="30,0"
					HorizontalAlignment="Center"
					Content="{x:Static loc:Resources.SaveSettingsButton}" />
			</Grid>
		</Grid>
	</Grid>
</local:SettingsWindowBase>
